/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/* libre-franklin-300 - latin */
@font-face {
  font-family: 'Libre Franklin';
  font-style: normal;
  font-weight: 300;
  src: url("../fonts/libre-franklin-v4-latin-300.eot");
  /* IE9 Compat Modes */
  src: local("Libre Franklin Light"), local("LibreFranklin-Light"), url("../fonts/libre-franklin-v4-latin-300.eot?#iefix") format("embedded-opentype"), url("../fonts/libre-franklin-v4-latin-300.woff2") format("woff2"), url("../fonts/libre-franklin-v4-latin-300.woff") format("woff"), url("../fonts/libre-franklin-v4-latin-300.ttf") format("truetype"), url("../fonts/libre-franklin-v4-latin-300.svg#LibreFranklin") format("svg");
  /* Legacy iOS */ }

/* libre-franklin-regular - latin */
@font-face {
  font-family: 'Libre Franklin';
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/libre-franklin-v4-latin-regular.eot");
  /* IE9 Compat Modes */
  src: local("Libre Franklin"), local("LibreFranklin-Regular"), url("../fonts/libre-franklin-v4-latin-regular.eot?#iefix") format("embedded-opentype"), url("../fonts/libre-franklin-v4-latin-regular.woff2") format("woff2"), url("../fonts/libre-franklin-v4-latin-regular.woff") format("woff"), url("../fonts/libre-franklin-v4-latin-regular.ttf") format("truetype"), url("../fonts/libre-franklin-v4-latin-regular.svg#LibreFranklin") format("svg");
  /* Legacy iOS */ }

/* libre-franklin-600 - latin */
@font-face {
  font-family: 'Libre Franklin';
  font-style: normal;
  font-weight: 600;
  src: url("../fonts/libre-franklin-v4-latin-600.eot");
  /* IE9 Compat Modes */
  src: local("Libre Franklin SemiBold"), local("LibreFranklin-SemiBold"), url("../fonts/libre-franklin-v4-latin-600.eot?#iefix") format("embedded-opentype"), url("../fonts/libre-franklin-v4-latin-600.woff2") format("woff2"), url("../fonts/libre-franklin-v4-latin-600.woff") format("woff"), url("../fonts/libre-franklin-v4-latin-600.ttf") format("truetype"), url("../fonts/libre-franklin-v4-latin-600.svg#LibreFranklin") format("svg");
  /* Legacy iOS */ }

html {
  font-family: 'Libre Franklin', Arial, sans-serif;
  font-size: 18px;
  height: 100%; }
  @media screen and (max-width: 768px) {
    html {
      font-size: 12px; } }

body {
  height: 100%;
  scroll-behavior: smooth;
  text-rendering: optimizeSpeed;
  line-height: 1.5; }

*,
*::before,
*::after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

body, h1, h2, h3, h4, h5, h6, p, ol, ul {
  margin: 0;
  padding: 0;
  font-weight: normal; }

ol, ul {
  list-style: none; }

img {
  max-width: 100%;
  display: block; }

input,
button,
textarea,
select {
  font: inherit; }

audio,
canvas,
iframe,
img,
svg,
video,
textarea {
  vertical-align: middle; }

textarea {
  resize: none; }

section {
  position: relative;
  padding: 90px 0 100px; }
  @media screen and (max-width: 1280px) {
    section {
      padding: 50px 0 70px;
      margin: 0 auto; } }

input,
select,
button {
  outline: none; }

.wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%; }

.content {
  -webkit-box-flex: 1;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto; }

.container {
  margin: 0 auto;
  max-width: 1440px;
  padding: 0 165px;
  width: 100%; }
  @media screen and (max-width: 1440px) {
    .container {
      padding: 0 15px; } }

.light-bg {
  background-color: #fffaf2; }

h2 {
  font-weight: bold;
  font-size: 24px; }

footer {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding: 90px 0 100px; }

.footer {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between; }

.footer-nav__link {
  color: #333;
  text-decoration: none; }

.footer-nav__item:not(:last-child) {
  margin-bottom: 15px; }

.footer-contacts {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column; }
  .footer-contacts a {
    text-decoration: none;
    color: #333; }
    .footer-contacts a:not(:last-child) {
      margin-bottom: 15px; }

header {
  position: fixed;
  width: 100%;
  top: 90px;
  z-index: 5;
  -webkit-transition: .2s linear;
  -o-transition: .2s linear;
  transition: .2s linear; }
  @media screen and (max-width: 1280px) {
    header {
      top: 35px; } }

.header {
  color: white;
  line-height: 1.3;
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between; }
  @media screen and (max-width: 768px) {
    .header {
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center; } }
  .header__title {
    font-weight: bold;
    font-size: 24px; }
    @media screen and (max-width: 768px) {
      .header__title {
        display: none; } }
  .header .sandwich {
    position: absolute;
    left: 5%; }

.header_active {
  top: 0;
  width: 100%;
  background-color: rgba(150, 123, 113, 0.6); }

.main-nav.is-active {
  background: rgba(150, 123, 113, 0.6);
  border-radius: 5px;
  display: block;
  position: fixed;
  width: 100%;
  height: 100%;
  padding-top: 20px;
  padding-bottom: 20px; }

@media screen and (max-width: 768px) {
  .main-nav {
    display: none; } }

@media screen and (min-width: 769px) {
  .main-nav__list {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; } }

@media screen and (max-width: 768px) {
  .main-nav__list {
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    font-size: 30px;
    height: 100%;
    text-align: center; } }

@media screen and (min-width: 769px) {
  .main-nav__item:not(:last-child) {
    margin-right: 60px; } }

@media screen and (max-width: 768px) {
  .main-nav__item:not(:last-child) {
    margin-bottom: 20px; } }

.main-nav__link {
  color: #fff;
  text-decoration: none; }
  .main-nav__link:hover {
    text-decoration: underline; }

.s-banner {
  background: url("../images/content/bg-img.jpg") no-repeat;
  background-size: cover;
  position: relative;
  height: 992px;
  padding-top: 265px; }
  @media screen and (max-width: 1280px) {
    .s-banner {
      height: 768px;
      padding-top: 160px;
      width: 100%; } }
  @media screen and (max-width: 1024px) {
    .s-banner {
      height: 400px;
      padding-top: 115px; } }
  @media screen and (max-width: 768px) {
    .s-banner {
      height: 320px;
      padding-top: 115px; } }
  .s-banner:after {
    content: '';
    background: rgba(198, 198, 73, 0.3);
    bottom: 0;
    left: 0;
    right: 0;
    top: 0;
    position: absolute;
    z-index: 0; }
  .s-banner .container {
    position: relative;
    z-index: 1; }

.banner {
  color: #fff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  line-height: 1.3; }
  .banner__title {
    font-size: 64px;
    margin-bottom: 50px; }
    @media screen and (max-width: 1280px) {
      .banner__title {
        font-size: 48px; } }
    @media screen and (max-width: 1024px) {
      .banner__title {
        font-size: 36px; } }
    @media screen and (max-width: 768px) {
      .banner__title {
        font-size: 24px; } }
  .banner__descr {
    font-size: 36px;
    margin-bottom: 206px; }
    @media screen and (max-width: 1280px) {
      .banner__descr {
        margin-bottom: 50px;
        font-size: 36px; } }
    @media screen and (max-width: 1024px) {
      .banner__descr {
        margin-bottom: 35px;
        font-size: 24px; } }
    @media screen and (max-width: 768px) {
      .banner__descr {
        margin-bottom: 25px;
        font-size: 20px; } }
  .banner__link {
    font-size: 24px;
    color: #fff; }
    @media screen and (max-width: 1280px) {
      .banner__link {
        font-size: 20px; } }
    @media screen and (max-width: 1024px) {
      .banner__link {
        font-size: 18px; } }

h2 {
  font-size: 24px;
  line-height: 1.3;
  margin-bottom: 75px; }
  @media screen and (max-width: 1280px) {
    h2 {
      margin-bottom: 40px; } }

h3 {
  font-weight: 600;
  line-height: 1.4;
  margin-bottom: 50px; }
  @media screen and (max-width: 1280px) {
    h3 {
      margin-bottom: 25px; } }

p {
  line-height: 1.6; }

p + p {
  margin-top: 30px; }

@media screen and (min-width: 1025px) {
  .skills {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; } }

@media screen and (min-width: 1025px) {
  .skills__photo-wrapper {
    -ms-flex-negative: 0;
    flex-shrink: 0;
    padding-right: 100px;
    width: 40%; } }

@media screen and (max-width: 1024px) {
  .skills__photo-wrapper {
    margin-bottom: 40px; } }

.skills__list {
  -webkit-box-flex: 1;
  -ms-flex: 1;
  flex: 1; }

.skills-list__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }
  .skills-list__item:not(:last-child) {
    margin-bottom: 20px; }
  .skills-list__item:first-child {
    margin-bottom: 60px; }

.skills-list__key {
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding-right: 10px;
  width: 200px; }

.skills-list__label {
  font-weight: 600; }

.skills-list__value {
  -webkit-box-flex: 1;
  -ms-flex: 1;
  flex: 1; }

.skill-line {
  background-color: #f5d6ab;
  height: 25px;
  position: relative; }
  .skill-line__percent {
    background-color: #c66c49;
    bottom: 0;
    left: 0;
    position: absolute;
    top: 0;
    z-index: 1; }

.portfolio__body {
  display: grid;
  grid-template-columns: repeat(1, 1fr); }
  @media screen and (min-width: 1025px) {
    .portfolio__body {
      display: grid;
      grid-template-columns: repeat(2, 1fr); } }

@media screen and (min-width: 1025px) {
  .portfolio__info {
    -ms-grid-column-align: center;
    width: 100%; } }

@media screen and (max-width: 1024px) {
  .portfolio__info {
    margin-bottom: 0; } }

.portfolio__photo {
  width: 500px;
  height: 300px;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-transition: 1s;
  -o-transition: 1s;
  transition: 1s;
  -webkit-animation-name: slide;
  animation-name: slide;
  -webkit-animation-duration: 10s;
  animation-duration: 10s;
  -webkit-animation-timing-function: linear;
  animation-timing-function: linear;
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite; }
  @media screen and (max-width: 768px) {
    .portfolio__photo {
      display: none; } }

.portfolio__photo:hover {
  -webkit-transform: scale(1.5);
  -ms-transform: scale(1.5);
  transform: scale(1.5); }
  @media screen and (max-width: 1024px) {
    .portfolio__photo:hover {
      -webkit-transform: none;
      -ms-transform: none;
      transform: none; } }

.swiper-wrapper {
  width: 500px;
  height: 300px;
  margin-left: 50px;
  margin-top: 25px;
  position: relative;
  overflow: hidden; }
  @media screen and (max-width: 768px) {
    .swiper-wrapper {
      display: none; } }

.swiper-slide_1 {
  -webkit-animation-delay: 7.5s;
  animation-delay: 7.5s;
  background-image: url("../images/content/portfolio-1.jpg");
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover; }

.swiper-slide_2 {
  -webkit-animation-delay: 5s;
  animation-delay: 5s;
  background-image: url("../images/content/portfolio-2.jpg");
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover; }

.swiper-slide_3 {
  -webkit-animation-delay: 2.5s;
  animation-delay: 2.5s;
  background-image: url("../images/content/portfolio-3.jpg");
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover; }

.swiper-slide_4 {
  -webkit-animation-delay: 0s;
  animation-delay: 0s;
  background-image: url("../images/content/portfolio-4.jpg");
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover; }

@-webkit-keyframes slide {
  from {
    top: 0;
    left: 0; }
  12.5% {
    -webkit-transform: translate(0px, 0px);
    transform: translate(0px, 0px); }
  25% {
    -webkit-transform: translate(-500px, 0);
    transform: translate(-500px, 0); }
  36% {
    -webkit-transform: translate(-500px, 300px);
    transform: translate(-500px, 300px); }
  37% {
    -webkit-transform: translate(500px, 300px);
    transform: translate(500px, 300px); }
  87.5% {
    -webkit-transform: translate(500px, 0);
    transform: translate(500px, 0); }
  to {
    -webkit-transform: 0px, 0px;
    transform: 0px, 0px; } }

@keyframes slide {
  from {
    top: 0;
    left: 0; }
  12.5% {
    -webkit-transform: translate(0px, 0px);
    transform: translate(0px, 0px); }
  25% {
    -webkit-transform: translate(-500px, 0);
    transform: translate(-500px, 0); }
  36% {
    -webkit-transform: translate(-500px, 300px);
    transform: translate(-500px, 300px); }
  37% {
    -webkit-transform: translate(500px, 300px);
    transform: translate(500px, 300px); }
  87.5% {
    -webkit-transform: translate(500px, 0);
    transform: translate(500px, 0); }
  to {
    -webkit-transform: 0px, 0px;
    transform: 0px, 0px; } }

.sandwich {
  cursor: pointer;
  height: 40px;
  position: relative;
  top: 15px;
  width: 40px;
  z-index: 15;
  background-color: rgba(150, 123, 113, 0.6); }
  @media screen and (min-width: 769px) {
    .sandwich {
      display: none; } }
  .sandwich.is-active .sandwich__line--top {
    top: 20px;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg); }
  .sandwich.is-active .sandwich__line--middle {
    opacity: 0; }
  .sandwich.is-active .sandwich__line--bottom {
    top: 20px;
    -webkit-transform: rotate(-45deg);
    -ms-transform: rotate(-45deg);
    transform: rotate(-45deg); }
  .sandwich__line {
    background-color: #fff;
    display: block;
    height: 2px;
    position: absolute;
    -webkit-transition: all linear .4s;
    -o-transition: all linear .4s;
    transition: all linear .4s;
    width: 90%;
    left: 5%; }
    .sandwich__line--top {
      top: 5px; }
    .sandwich__line--middle {
      top: 19px; }
    .sandwich__line--bottom {
      top: 33px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
